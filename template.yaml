AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  asyncronous-usecaase-s3-sns-sqs

  Sample SAM Template for asyncronous-usecaase-s3-sns-sqs

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    Runtime: java17
    Architectures:
      - x86_64
    MemorySize: 512

Resources:
  PatientCheckoutDLQ:
    Type: AWS::SNS::Topic
  PatientCheckoutBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${AWS::AccountId}-${AWS::Region}
  PatientCheckoutTopic:
    Type: AWS::SNS::Topic
  PatientCheckoutLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: patient-checkout
      Handler: com.zeero.async.usecase.apis.PatientCheckoutLambda::handleRequest
      DeadLetterQueue:
        Type: SNS
        TargetArn: !Ref PatientCheckoutDLQ
      Policies:
        - S3ReadPolicy:
            BucketName: !Sub ${AWS::StackName}-${AWS::AccountId}-${AWS::Region}
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt PatientCheckoutTopic.TopicName
      Environment:
        Variables:
          PATIENT_CHECKOUT_TOPIC: { "Ref": "PatientCheckoutTopic" }
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: { "Ref": "PatientCheckoutBucket" }
            Events: s3:ObjectCreated:*
  BillManagementLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: patient-checkout
      Handler: com.zeero.async.usecase.apis.BillManagementLambda::handler
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: { "Ref": "PatientCheckoutTopic" }
  ErrorHandlerLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: patient-checkout
      Handler: com.zeero.async.usecase.apis.ErrorHandlerLambda::handler
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref PatientCheckoutDLQ